stages:
  - build
  - run
  - deploy

update config:
  stage: build
  tags:
    - shell
  script:
    #- sudo cp -r Backend/victory/. ~/projectvictory-test/backend
    #- sudo cp -r Frontend/. ~/projectvictory-test/frontend
    - sudo cp -f nginx.conf ~/projectvictory-test/
    - sudo cp -f docker-compose.yaml ~/projectvictory-test/
  only:
    refs:
      - dev
    changes:
      - nginx.conf
      - docker-compose.yaml

update backend:
  stage: build
  tags:
    - shell
  script:
    - sudo cp -r Backend/victory/. ~/projectvictory-test/backend
    #- sudo cp -r Frontend/. ~/projectvictory-test/frontend
    #- sudo cp -f nginx.conf ~/projectvictory-test/
    #- sudo cp -f docker-compose.yaml ~/projectvictory-test/
  after_script:
    - docker compose build backend
  only:
    refs:
      - dev
    changes:
      - Backend/victory/*

update frontend:
  stage: build
  tags:
    - shell
  script:
    #- sudo cp -r Backend/victory/. ~/projectvictory-test/backend
    - sudo cp -r Frontend/. ~/projectvictory-test/frontend
    #- sudo cp -f nginx.conf ~/projectvictory-test/
    #- sudo cp -f docker-compose.yaml ~/projectvictory-test/
  after_script:
    - docker compose build frontend
  only:
    refs:
      - dev
    changes:
      - Frontend/*

build application:
  stage: run
  needs: ["update frontend", "update backend"]
  when: on_success
  tags:
    - shell
  before_script:
    - cd ~/projectvictory-test
  script:
    - docker compose up -d --build

